import asyncio
import os
from db import Database

async def force_reset():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db = Database()
    await db.initialize()
    
    print("üóëÔ∏è –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•...")
    
    async with db.pool.acquire() as conn:
        try:
            # –£–¥–∞–ª—è–µ–º –í–°–ï –¥–∞–Ω–Ω—ã–µ
            print("üìä –£–¥–∞–ª—è–µ–º –í–°–ï –ø–∏–Ω–≥–∏...")
            await conn.execute("DELETE FROM pings")
            
            print("üë• –£–¥–∞–ª—è–µ–º –í–°–ï–• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            await conn.execute("DELETE FROM users")
            
            print("üîë –£–¥–∞–ª—è–µ–º –í–°–ï –∫–æ–¥—ã –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...")
            await conn.execute("DELETE FROM activation_codes")
            
            print("üí¨ –£–¥–∞–ª—è–µ–º –í–°–ï –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Ç—ã...")
            await conn.execute("DELETE FROM activated_chats")
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏
            print("üîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏...")
            await conn.execute("ALTER SEQUENCE IF EXISTS pings_id_seq RESTART WITH 1")
            await conn.execute("ALTER SEQUENCE IF EXISTS activation_codes_id_seq RESTART WITH 1")
            await conn.execute("ALTER SEQUENCE IF EXISTS activated_chats_id_seq RESTART WITH 1")
            
            print("‚úÖ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ü–û–õ–ù–û–°–¢–¨–Æ –û–ß–ò–©–ï–ù–ê!")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞
            pings = await conn.fetchval("SELECT COUNT(*) FROM pings")
            users = await conn.fetchval("SELECT COUNT(*) FROM users")
            codes = await conn.fetchval("SELECT COUNT(*) FROM activation_codes")
            chats = await conn.fetchval("SELECT COUNT(*) FROM activated_chats")
            
            print(f"üìã –ü—Ä–æ–≤–µ—Ä–∫–∞: pings={pings}, users={users}, codes={codes}, chats={chats}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(force_reset())
