import asyncio
import os
from db import Database

async def check_open_pings():
    db = Database()
    await db.initialize()
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–∏–Ω–≥–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    async with db.pool.acquire() as conn:
        # –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ —á–∞—Ç—ã
        chats = await conn.fetch("SELECT DISTINCT chat_id FROM pings")
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —á–∞—Ç–æ–≤ —Å –ø–∏–Ω–≥–∞–º–∏: {len(chats)}")
        
        for chat_row in chats:
            chat_id = chat_row['chat_id']
            print(f"\n=== –ß–∞—Ç {chat_id} ===")
            
            # –í—Å–µ –ø–∏–Ω–≥–∏ –≤ —á–∞—Ç–µ
            all_pings = await conn.fetch("""
                SELECT target_user_id, ping_ts, close_ts, source_message_id, ping_reason
                FROM pings 
                WHERE chat_id = $1 
                ORDER BY ping_ts DESC 
                LIMIT 10
            """, chat_id)
            
            print(f"üìà –í—Å–µ–≥–æ –ø–∏–Ω–≥–æ–≤: {len(all_pings)}")
            
            # –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–∏–Ω–≥–∏
            open_pings = await conn.fetch("""
                SELECT target_user_id, ping_ts, source_message_id, ping_reason
                FROM pings 
                WHERE chat_id = $1 AND close_ts IS NULL
                ORDER BY ping_ts DESC
            """, chat_id)
            
            print(f"‚è∞ –û—Ç–∫—Ä—ã—Ç—ã—Ö –ø–∏–Ω–≥–æ–≤: {len(open_pings)}")
            
            if open_pings:
                print("üîç –î–µ—Ç–∞–ª–∏ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–∏–Ω–≥–æ–≤:")
                for ping in open_pings:
                    print(f"  - User {ping['target_user_id']}, ping_ts: {ping['ping_ts']}, msg_id: {ping['source_message_id']}, reason: {ping['ping_reason']}")
            else:
                print("‚ùå –û—Ç–∫—Ä—ã—Ç—ã—Ö –ø–∏–Ω–≥–æ–≤ –Ω–µ—Ç!")
                
                # –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç—ã–µ –ø–∏–Ω–≥–∏
                recent_closed = await conn.fetch("""
                    SELECT target_user_id, ping_ts, close_ts, source_message_id, ping_reason
                    FROM pings 
                    WHERE chat_id = $1 AND close_ts IS NOT NULL
                    ORDER BY ping_ts DESC 
                    LIMIT 3
                """, chat_id)
                
                if recent_closed:
                    print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç—ã–µ –ø–∏–Ω–≥–∏:")
                    for ping in recent_closed:
                        print(f"  - User {ping['target_user_id']}, ping_ts: {ping['ping_ts']}, close_ts: {ping['close_ts']}, reason: {ping['ping_reason']}")

if __name__ == "__main__":
    asyncio.run(check_open_pings())
